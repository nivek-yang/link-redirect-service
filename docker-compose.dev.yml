services:
  redirect-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
        bash -c "uv run uvicorn main:app --host 0.0.0.0 --port 8002"
    volumes:
      - .:/app
    ports:
      - "8002:8002"
    env_file:
      - .env
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_DB=links_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq 
      - DJANGO_FRONTEND_URL=http://backend:8000
    depends_on:
      - mongodb
      - redis
      - rabbitmq

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ping: 1})"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  rabbitmq: # 新增 RabbitMQ 服務
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

volumes:
  mongodb_data:
  rabbitmq_data: # 新增 RabbitMQ 資料卷
