name: CI Tests for Redirect Service

on: [push, pull_request]

jobs:
  native-pytest:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq:3-management-alpine
        ports:
          - 5672:5672
        options: >-
          --health-cmd "rabbitmq-diagnostics check_running" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv sync

      - name: Install dev dependencies
        run: uv sync --dev

      - name: Run tests
        env:
          MONGO_HOST: localhost
          MONGO_PORT: 27017
          MONGO_DB: test_links_db
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          RABBITMQ_HOST: localhost
        run: uv run pytest -v --tb=short --maxfail=5 --disable-warnings

  docker-compose-pytest:
    name: Docker Compose Pytest

    runs-on: ubuntu-latest

    env:
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DB: links_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      DJANGO_FRONTEND_URL: http://backend:8000

    steps:
      - uses: actions/checkout@v4

      - name: Create backend .env file
        run: |
          touch .env

      - name: Build docker-compose services
        run: docker compose -f docker-compose.dev.yml build

      - name: Run pytest
        run: |
          docker compose -f docker-compose.dev.yml run --rm redirect-service uv run pytest -v --tb=short --maxfail=5 --disable-warnings

      - name: Check container logs on failure
        if: failure()
        run: docker compose -f docker-compose.dev.yml logs redirect-service

      - name: Shutdown docker-compose
        run: docker compose -f docker-compose.dev.yml down -v
